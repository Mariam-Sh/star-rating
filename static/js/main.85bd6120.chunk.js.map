{"version":3,"sources":["Components/StarRating.js","App.js","reportWebVitals.js","index.js"],"names":["StarRating","length","totalStars","useState","selectedStars","setSelectedStar","Star","selected","onselect","f","color","onClick","Array","map","n","i","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPA+BeA,EA3BI,SAAC,GAAoB,IAUlBC,EAViB,IAAlBC,kBAAkB,MAAP,EAAO,EAErC,EAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAGMC,EAAO,SAAC,GAAD,QAAEC,gBAAF,aAAoBC,gBAApB,MAA+B,SAAAC,GAAC,OAAIA,GAApC,SACX,cAAC,IAAD,CAAQC,MAAOH,EAAW,MAAQ,OAAQI,QAASH,KAOrD,OACE,sCAJkBP,EAKLC,EALW,YAAQU,MAAMX,KAKbY,KAAI,SAACC,EAAEC,GAAH,OAC3B,cAACT,EAAD,CAEAC,SAAUH,EAAgBW,EAC1BP,SAAU,kBAAKH,EAAgBU,EAAE,KAF5BA,MAKP,8BAAIX,EAAJ,OAAuBF,EAAvB,gBCfWc,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.85bd6120.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport {FaStar} from 'react-icons/fa';\r\n\r\nconst StarRating = ({totalStars=5}) => {\r\n\r\n  const [selectedStars,setSelectedStar] = useState(0);\r\n\r\n\r\n  const Star = ({selected = false, onselect = f => f}) => (\r\n    <FaStar color={selected ? \"red\" : \"grey\"} onClick={onselect} />\r\n\r\n  )\r\n\r\n  const createArray = length => [...Array(length)];\r\n\r\n\r\n  return (\r\n    <>\r\n    {createArray(totalStars).map((n,i) => (\r\n      <Star \r\n      key={i}\r\n      selected={selectedStars > i}\r\n      onselect={()=> setSelectedStar(i+1)}\r\n      />\r\n    ))}\r\n    <p>{selectedStars} of {totalStars} stars</p>\r\n       </> \r\n  );\r\n  \r\n}\r\nexport default StarRating;\r\n","import './App.css';\nimport StarRating from './Components/StarRating';\n\nfunction App() {\n  return (\n    <div>\n      <StarRating />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}